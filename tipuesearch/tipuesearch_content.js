var tipuesearch = {"pages":[{"title":"POSCExt论坛","url":"/2025/04/19/2025_04_19_18_29/","text":"POSCExt论坛POSCExt论坛 论坛五大主要纲领 勤动脑 善动手 AI好帮手（不要当入机） 不要骂人，不说脏话 工具请上网搜自行下载","tags":"教程"},{"title":"论坛/群规","url":"/2025/04/18/2025_04_18_19_15/","text":"我们 PenOSCrack&#x2F;POSC 是一个公益的、开源的、现代的组织。仅供探讨有关 PenOS&#x2F;词典笔OS 的内容。我们无义务教会成员如何使用工具，我们会提供我们所使用的逆向工具但不会教会成员使用方法，所以请成员们准备好一双灵巧的双手和一个善于思考的大脑 POSC的纲领管理员 管理员不得在任何情况下，辱骂侮辱群员。包括但不限于 符号 ***（除非群员语言激进，有挑衅辱骂等才可以直接骂人并给予一次警告后再违反直接踢出，严重者有权直接踢出） 管理在任何情况下都没有义务教会群员任何事情（除了探讨技术性问题，我们所有用到的工具都带有详细说明，如有没有说明可以询问用法。但群员不得询问常识性问题，如：npm怎么安装 apt怎么用 nodejs服务器怎么开 py脚本怎么打开等问题） 管理员有权将不看教程者踢出群聊或论坛封禁，在使用权限前须提醒三次需要明确说明原因并在此官网小黑屋标签下更新日志 群员 群员不得询问常识性问题（管理员第2条） 群员不得辱骂其它 群员&#x2F;管理员 否则将给予一次警告后再违反踢出群聊，严重者直接踢出 群员凡事都得先看教程，不会接着问AI，再不会必应搜，还是不会最后再问群员&#x2F;管理员（但管理员没有义务教会群员的义务，违反者如管理员第2条处置） 群员们可以进行投票选举管理员（最起码15票），但晋升为管理员后无义务教会群员常识性问题","tags":"关于"},{"title":"1.0更新","url":"/2025/04/12/2025_04_12_13_55_56/","text":"1.0更新网页更新Hexo为渲染模板","tags":""},{"title":"如何优雅的使用Github Action服务来将Hexo部署到Github Pages","url":"/2024/06/19/2024_06_19_12_31/","text":"本教程由木子dn提供李子翻版 参考文章Bilibili视频教程-9分钟零成本搭建自动化部署个人博客(Hexo + Github Action + Page)Hexo官方文档利用 GitHub Action 自动部署 Hexo 博客Hexo主题-Icarus快速上手 前提条件当前PC环境中有Node和Git。版本可以参考Hexo文档。 文章中出现的yourusername为Github用户名，your-repo为仓库名。 1. 初始化Hexo安装脚手架，初始化hexo，这会新建blog文件夹，进入后安装依赖。 1234npm install -g hexo-clihexo init blogcd blognpm install 2. 初始化仓库可以选择利用VSCode等软件直接对项目开源到github仓库。 也可以手动去github创建一个空仓库，然后手动在命令行中推送。 12345git initgit remote add origin https://github.com/yourusername/your-repo.gitgit add .git commit -m &quot;Initial commit&quot;git push -u origin main 3. 创建Token在个人设置中新增一个Personal access tokens。至少要包含repo权限，然后记住token。这个token是给Github Action用的，Github Action会把Hexo编译部署到gh-pages分支。 随后在存放Hexo代码的仓库里把这个Token新增进去，名称为GH_TOKEN(随意，后面需要一致)。 4. 修改_config.yml在_config.yml中修改deploy字段。指示Hexo在deploy时的推送地址。 1234deploy: type: git repo: https://github.com/yourusername/your-repo.git branch: gh-pages 5. 配置Github Action工作流在.github文件夹下新增workflows文件夹，然后新增deploy.yml文件，内容如下。 里面有个node-version要和你本地的node一致。步骤大致意思就是使用ubuntu-latest作为基础环境，然后安装各种依赖，随后hexo generate生成博客网站静态文件夹，把这个文件夹推送到同一仓库的gh-pages分支。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950name: Deploy Hexo to GitHub Pageson: push: branches: - main # 当推送到 main 分支时触发jobs: build: runs-on: ubuntu-latest steps: - name: Checkout repository uses: actions/checkout@v2 with: submodules: false # 禁用子模块检查 - name: Setup Node.js uses: actions/setup-node@v2 with: node-version: &#x27;18&#x27; - name: Install Dependencies run: npm install - name: Install Hexo Git Deployer run: | npm install hexo-deployer-git --save npm install hexo-cli -g - name: Clean and Generate Static Files run: | hexo clean hexo generate - name: Configure Git run: | git config --global user.name &#x27;github-actions[bot]&#x27; git config --global user.email &#x27;github-actions[bot]@users.noreply.github.com&#x27; - name: Deploy to GitHub Pages env: GH_TOKEN: $&#123;&#123; secrets.GH_TOKEN &#125;&#125; run: | cd public/ git init git add -A git commit -m &quot;Create by workflows&quot; git remote add origin https://$&#123;&#123; secrets.GH_TOKEN &#125;&#125;@github.com/yourusername/your-repo.git git push origin HEAD:gh-pages -f 6. 推送验证把刚才更新的所有文件都推送一遍，github就会触发工作流，然后去网站看工作流运转的如何。等一切运转完毕，就会发现仓库多出一个gh-pages分支。 7. 配置Github Pages在仓库settings中配置page来源为gh-pages分支即可。等待网站部署完毕，就可以看了。网站链接可以在settings的GitHub Pages看到，也可以去action里看到。 8. 修改Hexo主题样式以一个比较热门的主题为演示示例，参考地址https://github.com/ppoffice/hexo-theme-icarus。 若要使用NPM将Icarus安装为Node包，在你的Hexo站点根目录运行如下命令： 1npm install -S hexo-theme-icarus hexo-renderer-inferno 接下来，使用hexo命令修改主题为Icarus: 1hexo config theme icarus 会发现多出一个_config.icarus.yml文件。这是Icarus主题的配置文件。 最后推送到仓库，等待部署后，就可以了。 10. 添加文章你可以执行下列命令来创建一篇新文章或者新的页面。 1$ hexo new [layout] &lt;title&gt; 您可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。 文章添加编辑后，现在只需要推送到仓库，那么github不仅会保存你的Hexo个人博客源码，还会自动更新个人博客静态页面到gh-pages，由此触发github-page功能来更新你的个人博客网站。 遇到了一些问题和方案1. 网站没有样式问题在网站打开F12，发现css等样式资源无法加载，仔细查看报错原因和请求地址，发现并不是当前仓库。 缺少仓库地址，所以把请求地址复制一份，并在后面添加上仓库名即可，这需要修改_config.yml中修改url字段。yourusername似乎为小写。 推送后等待工作流执行，查看结果。 12url: https://yourusername.github.io/your-reporoot: /your-repo/ 2. 图片不显示在_config.yml中设置 1post_asset_folder: true 意思是每个md博文会单独配套一个同名文件夹，用来存放图片。形如 1234source/_posts/├── my-new-post.md└── my-new-post/ └── example.jpg hexo提供三种语法 123&#123;% asset_path slug %&#125;&#123;% asset_img slug [title] %&#125;&#123;% asset_link slug [title] %&#125; 那么在md中可以这样引用图片 1&#123;% asset_img example.jpg This is an example image %&#125; 这样一来，部署的时候图片就不会不显示了，但是有个新的问题，我在本地编辑md的时候无法预览图片怎么办。 建议用VSCode下载插件vscode-hexo和Hexo Utils，随后在左边栏目就可以看到新Hexo Utils的新菜单，只要你的VSCode当前打开的文件夹是hexo的根目录，那么插件就会自动识别到，当你对md文件使用“侧边预览”时，图片就正常显示了。","tags":"博客网站"},{"title":"[object Object]","url":"/tutorial.html","text":"","tags":""},{"title":"分类","url":"/categories/index.html","text":"","tags":""},{"title":"标签","url":"/tags/index.html","text":"","tags":""}]}